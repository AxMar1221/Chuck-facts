{"ast":null,"code":"var _jsxFileName = \"/Users/axelhernandez/Documents/GitHub/Chuck-facts/src/components/random/Randomjoke.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CardJoke from \"./CardJoke\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RANDOM = \"random\";\nconst RANDOM_BY_CATEGORIE = \"randombycategorie\";\nconst SEARCH_JOKES = \"search\";\n\nconst Randomjoke = ({\n  initialState = {\n    randomJoke: {},\n    categories: [],\n    jokeByCategorie: {},\n    searchJokes: [],\n    typeOfJoke: RANDOM\n  }\n}) => {\n  _s();\n\n  function searchJokes({\n    target\n  }) {\n    fetch(`https://api.chucknorris.io/jokes/search?query=${target.value}`).then(data => data.json()).then(searchJoke => {\n      return dispatch({\n        payload: searchJoke.result,\n        type: \"setSearchJoke\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function selectedOption({\n    target\n  }) {\n    fetch(`https://api.chucknorris.io/jokes/random?category=${target.value}`).then(data => data.json()).then(jokeByCategorie => {\n      return dispatch({\n        payload: jokeByCategorie,\n        type: \"setjokeByCategorie\"\n      });\n    });\n  }\n\n  function fetchCategories() {\n    fetch(\"https://api.chucknorris.io/jokes/categories\").then(dataOfCategories => dataOfCategories.json()).then(dataOfCategories => {\n      return dispatch({\n        payload: dataOfCategories,\n        type: \"setCategoriesOfJokes\"\n      });\n    });\n  }\n\n  function randomJoke() {\n    fetch(\"https://api.chucknorris.io/jokes/random\").then(data => data.json()).then(data => {\n      dispatch({\n        payload: data,\n        type: \"setRandomJoke\"\n      });\n      return;\n    });\n  }\n\n  const reducerFunction = (state, action) => {\n    switch (action.type) {\n      case \"setRandomJoke\":\n        return { ...state,\n          randomJoke: action.payload,\n          typeOfJoke: RANDOM\n        };\n\n      case \"setCategoriesOfJokes\":\n        return { ...state,\n          categories: action.payload\n        };\n\n      case \"setjokeByCategorie\":\n        return { ...state,\n          jokeByCategorie: action.payload,\n          typeOfJoke: RANDOM_BY_CATEGORIE\n        };\n\n      case \"setSearchJoke\":\n        return { ...state,\n          searchJokes: action.payload,\n          typeOfJoke: SEARCH_JOKES\n        };\n\n      default:\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducerFunction, initialState);\n  const currentJoke = state.typeOfJoke === RANDOM ? state.randomJoke : state.jokeByCategorie;\n\n  if (state.searchJokes !== undefined) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"chuck__facts\",\n        children: \"Chuck Facts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jokes__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Let's have fun for a while\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"random\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"random\",\n              id: \"random\",\n              onClick: randomJoke\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), \"Random\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"category\",\n              type: \"radio\",\n              value: \"from categories\",\n              id: \"from categories\",\n              onClick: fetchCategories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), \"Categories\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: event => selectedOption(event),\n            children: state.categories.map(categorie => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: categorie,\n                children: categorie\n              }, categorie, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), state.typeOfJoke === SEARCH_JOKES && state.searchJokes !== undefined ? state.searchJokes.map(searchJoke => {\n      return /*#__PURE__*/_jsxDEV(CardJoke, {\n        joke: searchJoke\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 18\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(CardJoke, {\n      joke: currentJoke\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Randomjoke, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Randomjoke;\nexport default Randomjoke;\n\nvar _c;\n\n$RefreshReg$(_c, \"Randomjoke\");","map":{"version":3,"sources":["/Users/axelhernandez/Documents/GitHub/Chuck-facts/src/components/random/Randomjoke.js"],"names":["React","useReducer","CardJoke","RANDOM","RANDOM_BY_CATEGORIE","SEARCH_JOKES","Randomjoke","initialState","randomJoke","categories","jokeByCategorie","searchJokes","typeOfJoke","target","fetch","value","then","data","json","searchJoke","dispatch","payload","result","type","catch","err","console","log","selectedOption","fetchCategories","dataOfCategories","reducerFunction","state","action","currentJoke","undefined","event","map","categorie"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport CardJoke from \"./CardJoke\";\n\nconst RANDOM = \"random\";\nconst RANDOM_BY_CATEGORIE = \"randombycategorie\";\nconst SEARCH_JOKES = \"search\";\nconst Randomjoke = ({\n  initialState = {\n    randomJoke: {},\n    categories: [],\n    jokeByCategorie: {},\n    searchJokes: [],\n    typeOfJoke: RANDOM,\n  },\n}) => {\n  function searchJokes({ target }) {\n    fetch(`https://api.chucknorris.io/jokes/search?query=${target.value}`)\n      .then((data) => data.json())\n      .then((searchJoke) => {\n        return dispatch({\n          payload: searchJoke.result,\n          type: \"setSearchJoke\",\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function selectedOption({ target }) {\n    fetch(`https://api.chucknorris.io/jokes/random?category=${target.value}`)\n      .then((data) => data.json())\n      .then((jokeByCategorie) => {\n        return dispatch({\n          payload: jokeByCategorie,\n          type: \"setjokeByCategorie\",\n        });\n      });\n  }\n  function fetchCategories() {\n    fetch(\"https://api.chucknorris.io/jokes/categories\")\n      .then((dataOfCategories) => dataOfCategories.json())\n      .then((dataOfCategories) => {\n        return dispatch({\n          payload: dataOfCategories,\n          type: \"setCategoriesOfJokes\",\n        });\n      });\n  }\n  function randomJoke() {\n    fetch(\"https://api.chucknorris.io/jokes/random\")\n      .then((data) => data.json())\n      .then((data) => {\n        dispatch({ payload: data, type: \"setRandomJoke\" });\n        return;\n      });\n  }\n  const reducerFunction = (state, action) => {\n    switch (action.type) {\n      case \"setRandomJoke\":\n        return { ...state, randomJoke: action.payload, typeOfJoke: RANDOM };\n      case \"setCategoriesOfJokes\":\n        return { ...state, categories: action.payload };\n      case \"setjokeByCategorie\":\n        return {\n          ...state,\n          jokeByCategorie: action.payload,\n          typeOfJoke: RANDOM_BY_CATEGORIE,\n        };\n      case \"setSearchJoke\":\n        return {\n          ...state,\n          searchJokes: action.payload,\n          typeOfJoke: SEARCH_JOKES,\n        };\n      default:\n      \n    }\n  };\n\n  const [state, dispatch] = useReducer(reducerFunction, initialState);\n  const currentJoke =\n    state.typeOfJoke === RANDOM ? state.randomJoke : state.jokeByCategorie;\n  if (state.searchJokes !== undefined) {\n  }\n  return (\n    <div>\n      <header>\n        <h3 className=\"chuck__facts\">Chuck Facts</h3>\n      </header>\n      <div className=\"jokes__container\">\n        <h3>Let's have fun for a while</h3>\n\n        <div>\n          <form>\n            <label htmlFor=\"random\">\n              <input\n                type=\"radio\"\n                value=\"random\"\n                id=\"random\"\n                onClick={randomJoke}\n              >\n              </input>\n              Random\n            </label>\n              <p></p>\n              <label htmlFor=\"category\">\n                <input\n                  name=\"category\"\n                  type=\"radio\"\n                  value=\"from categories\"\n                  id=\"from categories\"\n                  onClick={fetchCategories}\n                >\n                </input>\n                  Categories\n            </label>\n\n            <select onChange={(event) => selectedOption(event)}>\n              {state.categories.map((categorie) => {\n                return (\n                  <option key={categorie} value={categorie}>\n                    {categorie}\n                  </option>\n                );\n              })}\n            </select>\n          </form>\n        </div>\n      </div>\n      <p></p>\n      {state.typeOfJoke === SEARCH_JOKES && state.searchJokes !== undefined ? (\n        state.searchJokes.map((searchJoke) => {\n          return <CardJoke joke={searchJoke}></CardJoke>;\n        })\n      ) : (\n        <CardJoke joke={currentJoke}></CardJoke>\n      )}\n    </div>\n  );\n};\nexport default Randomjoke;\n"]},"metadata":{},"sourceType":"module"}