{"ast":null,"code":"var _jsxFileName = \"/Users/axelhernandez/Documents/GitHub/Chuck-facts/src/components/SelectCategories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CardJoke from \"./CardJoke\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RANDOM_BY_CATEGORIE = \"randombycategorie\";\nconst SEARCH_JOKES = \"search\";\n\nconst SelectCategories = ({\n  initialState = {\n    categories: [],\n    jokeByCategorie: {},\n    searchJokes: []\n  }\n}) => {\n  _s();\n\n  function searchJokes({\n    target\n  }) {\n    fetch(`https://api.chucknorris.io/jokes/search?query=${target.value}`).then(data => data.json()).then(searchJoke => {\n      return dispatch({\n        payload: searchJoke.result,\n        type: \"setSearchJoke\"\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function selectedOption({\n    target\n  }) {\n    fetch(`https://api.chucknorris.io/jokes/random?category=${target.value}`).then(data => data.json()).then(jokeByCategorie => {\n      return dispatch({\n        payload: jokeByCategorie,\n        type: \"setjokeByCategorie\"\n      });\n    });\n  } // function fetchCategories() {\n  //   fetch(\"https://api.chucknorris.io/jokes/categories\")\n  //     .then((dataOfCategories) => dataOfCategories.json())\n  //     .then((dataOfCategories) => {\n  //       return dispatch({\n  //         payload: dataOfCategories,\n  //         type: \"setCategoriesOfJokes\",\n  //       });\n  //     });\n  // }\n\n\n  const reducerFunction = (state, action) => {\n    switch (action.type) {\n      case \"setCategoriesOfJokes\":\n        return { ...state,\n          categories: action.payload\n        };\n\n      case \"setjokeByCategorie\":\n        return { ...state,\n          jokeByCategorie: action.payload,\n          typeOfJoke: RANDOM_BY_CATEGORIE\n        };\n\n      case \"setSearchJoke\":\n        return { ...state,\n          searchJokes: action.payload,\n          typeOfJoke: SEARCH_JOKES\n        };\n\n      default:\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducerFunction, initialState);\n  const currentJoke = state.typeOfJoke = state.jokeByCategorie;\n\n  if (state.searchJokes !== undefined) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"chuck__facts\",\n        children: \"Chuck Facts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://assets.chucknorris.host/img/avatar/chuck-norris.png\",\n        alt: \"Cuchk-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jokes__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Let's have fun for a while\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: event => selectedOption(event),\n            children: state.categories.map(categorie => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: categorie,\n                children: categorie\n              }, categorie, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: \"search\",\n                id: \"search\",\n                name: \"search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), \"Search\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search a joke\",\n              onChange: event => searchJokes(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), state.typeOfJoke === SEARCH_JOKES && state.searchJokes !== undefined ? state.searchJokes.map(searchJoke => {\n      return /*#__PURE__*/_jsxDEV(CardJoke, {\n        joke: searchJoke\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 18\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(CardJoke, {\n      joke: currentJoke\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectCategories, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = SelectCategories;\nexport default SelectCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCategories\");","map":{"version":3,"sources":["/Users/axelhernandez/Documents/GitHub/Chuck-facts/src/components/SelectCategories.js"],"names":["React","useReducer","CardJoke","RANDOM_BY_CATEGORIE","SEARCH_JOKES","SelectCategories","initialState","categories","jokeByCategorie","searchJokes","target","fetch","value","then","data","json","searchJoke","dispatch","payload","result","type","catch","err","console","log","selectedOption","reducerFunction","state","action","typeOfJoke","currentJoke","undefined","event","map","categorie"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport CardJoke from \"./CardJoke\";\n\nconst RANDOM_BY_CATEGORIE = \"randombycategorie\";\nconst SEARCH_JOKES = \"search\";\nconst SelectCategories = ({\n  initialState = {\n    categories: [],\n    jokeByCategorie: {},\n    searchJokes: [],\n  },\n}) => {\n  function searchJokes({ target }) {\n    fetch(`https://api.chucknorris.io/jokes/search?query=${target.value}`)\n      .then((data) => data.json())\n      .then((searchJoke) => {\n        return dispatch({\n          payload: searchJoke.result,\n          type: \"setSearchJoke\",\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function selectedOption({ target }) {\n    fetch(`https://api.chucknorris.io/jokes/random?category=${target.value}`)\n      .then((data) => data.json())\n      .then((jokeByCategorie) => {\n        return dispatch({\n          payload: jokeByCategorie,\n          type: \"setjokeByCategorie\",\n        });\n      });\n  }\n  // function fetchCategories() {\n  //   fetch(\"https://api.chucknorris.io/jokes/categories\")\n  //     .then((dataOfCategories) => dataOfCategories.json())\n  //     .then((dataOfCategories) => {\n  //       return dispatch({\n  //         payload: dataOfCategories,\n  //         type: \"setCategoriesOfJokes\",\n  //       });\n  //     });\n  // }\n  const reducerFunction = (state, action) => {\n    switch (action.type) {\n      case \"setCategoriesOfJokes\":\n        return { ...state, categories: action.payload };\n      case \"setjokeByCategorie\":\n        return {\n          ...state,\n          jokeByCategorie: action.payload,\n          typeOfJoke: RANDOM_BY_CATEGORIE,\n        };\n      case \"setSearchJoke\":\n        return {\n          ...state,\n          searchJokes: action.payload,\n          typeOfJoke: SEARCH_JOKES,\n        };\n      default:\n      \n    }\n  };\n\n  const [state, dispatch] = useReducer(reducerFunction, initialState);\n  const currentJoke =\n    state.typeOfJoke = state.jokeByCategorie;\n  if (state.searchJokes !== undefined) {\n  }\n  return (\n    <div>\n      <header>\n        <h3 className=\"chuck__facts\">Chuck Facts</h3>\n        <img \n         src=\"https://assets.chucknorris.host/img/avatar/chuck-norris.png\"\n         alt=\"Cuchk-icon\"\n        />\n      </header>\n      <div className=\"jokes__container\">\n        <h3>Let's have fun for a while</h3>\n\n        <div>\n          <form>\n              <p></p>\n              <label htmlFor=\"category\">\n                {/* <input\n                  name=\"category\"\n                  type=\"radio\"\n                  value=\"from categories\"\n                  id=\"from categories\"\n                  onClick={fetchCategories}\n                >\n                </input> */}\n                  Categories\n            </label>\n\n            <select onChange={(event) => selectedOption(event)}>\n              {state.categories.map((categorie) => {\n                return (\n                  <option key={categorie} value={categorie}>\n                    {categorie}\n                  </option>\n                );\n              })}\n            </select>\n            <div>\n              <p></p>\n              <label htmlFor=\"search\">\n                <input\n                  type=\"radio\"\n                  value=\"search\"\n                  id=\"search\"\n                  name=\"search\"\n                ></input>\n                Search\n              </label>\n              <input\n                type=\"text\"\n                placeholder=\"Search a joke\"\n                onChange={(event) => searchJokes(event)}\n              ></input>\n            </div>\n          </form>\n        </div>\n      </div>\n      <p></p>\n      {state.typeOfJoke === SEARCH_JOKES && state.searchJokes !== undefined ? (\n        state.searchJokes.map((searchJoke) => {\n          return <CardJoke joke={searchJoke}></CardJoke>;\n        })\n      ) : (\n        <CardJoke joke={currentJoke}></CardJoke>\n      )}\n    </div>\n  );\n};\nexport default SelectCategories;\n"]},"metadata":{},"sourceType":"module"}